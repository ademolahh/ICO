{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AboveMaximumBuy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BelowMinimumBuy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InSufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        }
      ],
      "name": "RefundFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SalesHasEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EtherReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x911fbe4f1234e05efe7b4ae3d9b60b65c85f004f4621ee55a8dec061f2c5dc4e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "954268",
    "logsBloom": "0x
    "blockHash": "0x59f89cea6632ffe0088156e880bfe6d033d2c008d34d610f8a5dc20a2da4a050",
    "transactionHash": "0x911fbe4f1234e05efe7b4ae3d9b60b65c85f004f4621ee55a8dec061f2c5dc4e",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x911fbe4f1234e05efe7b4ae3d9b60b65c85f004f4621ee55a8dec061f2c5dc4e",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x59f89cea6632ffe0088156e880bfe6d033d2c008d34d610f8a5dc20a2da4a050"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "954268",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "2149313bb21c6bd7f736f5ba7dff5440",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AboveMaximumBuy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BelowMinimumBuy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InSufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"RefundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SalesHasEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buy(uint256)\":{\"params\":{\"_quantity\":\"the amount of token the contract caller is buying\"}},\"getCurrentPrice()\":{\"details\":\"calculate the time difference from the time sale started to the time of query       decreaseSinceStart calculate the amount of token to be reduced per day       totalDecrement reduce the amount by 5% of the initial sales price\",\"returns\":{\"_0\":\"the current sale price at time of query\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"initial coin offering\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCurrentPrice()\":{\"notice\":\"calculate the current price of each token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ICO.sol\":\"ICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ICO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport {IError} from \\\"./interfaces/IError.sol\\\";\\r\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title initial coin offering\\r\\n */\\r\\ncontract ICO is Ownable, IError {\\r\\n    IERC20 public token;\\r\\n\\r\\n    uint256 private constant DISCOUNT_RATE = 5;\\r\\n    uint256 private constant MINIMUM_TOKEN_BUY = 10000;\\r\\n\\r\\n    uint256 private constant MAXIMUM_TOKEN_BUY = 5000 ether;\\r\\n    uint256 private constant STARTING_PRICE = 5 * 10 ** 14; // for each token\\r\\n\\r\\n    // 0.005 ether == 1 token == 1 ether\\r\\n    // 5 ether == 100 ether token\\r\\n\\r\\n    uint256 private constant TARGET = 10 ether;\\r\\n    uint256 private constant DURATION = 7 days;\\r\\n\\r\\n    uint256 private immutable END_TIME;\\r\\n    uint256 private immutable START_TIME;\\r\\n\\r\\n    uint256 public contractBalance;\\r\\n\\r\\n    mapping(address => uint256) private amountOfTokenPurchased;\\r\\n\\r\\n    receive() external payable {\\r\\n        emit EtherReceived(msg.value);\\r\\n    }\\r\\n\\r\\n    constructor(address _token) {\\r\\n        START_TIME = block.timestamp;\\r\\n        END_TIME = START_TIME + DURATION;\\r\\n        token = IERC20(_token);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice calculate the current price of each token\\r\\n     *  @dev calculate the time difference from the time sale started to the time of query\\r\\n     *       decreaseSinceStart calculate the amount of token to be reduced per day\\r\\n     *       totalDecrement reduce the amount by 5% of the initial sales price\\r\\n     *  @return the current sale price at time of query\\r\\n     */\\r\\n    function getCurrentPrice() public view returns (uint256) {\\r\\n        uint256 timeDiff = block.timestamp - START_TIME; // 1 days\\r\\n        uint256 decreaseSinceStart = timeDiff / 1 days; //  reduce the price at every 24 hours\\r\\n        uint256 totalDecrement = (decreaseSinceStart *\\r\\n            (DISCOUNT_RATE * STARTING_PRICE)) / 100; // reduce by 5% of initial price6\\r\\n        return STARTING_PRICE - totalDecrement;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param _quantity the amount of token the contract caller is buying\\r\\n     */\\r\\n    function buy(uint256 _quantity) external payable {\\r\\n        uint256 price = getCurrentPrice();\\r\\n        uint256 cb = contractBalance;\\r\\n        if (block.timestamp > END_TIME) revert SalesHasEnded();\\r\\n        if (_quantity < MINIMUM_TOKEN_BUY) revert BelowMinimumBuy();\\r\\n        if (_quantity * price < msg.value) revert InSufficientBalance();\\r\\n        if (_quantity > MAXIMUM_TOKEN_BUY) revert AboveMaximumBuy();\\r\\n        uint256 toBeSent;\\r\\n        unchecked {\\r\\n            cb += msg.value;\\r\\n\\r\\n            if (contractBalance > TARGET) {\\r\\n                uint256 refund = contractBalance - TARGET;\\r\\n                (bool success, ) = payable(msg.sender).call{value: refund}(\\\"\\\");\\r\\n                if (!success) revert RefundFailed(refund);\\r\\n                toBeSent = (msg.value - refund) * price;\\r\\n                cb -= refund;\\r\\n            } else toBeSent = _quantity;\\r\\n\\r\\n            amountOfTokenPurchased[msg.sender] += toBeSent;\\r\\n            contractBalance = cb;\\r\\n        }\\r\\n        emit Buy(msg.sender, toBeSent);\\r\\n        require(token.transfer(msg.sender, toBeSent * 10 ** 18));\\r\\n    }\\r\\n\\r\\n    function withdraw() external onlyOwner {\\r\\n        if (block.timestamp < END_TIME) revert();\\r\\n        contractBalance = 0;\\r\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))));\\r\\n        (bool success, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        if (!success) revert TransferFailed();\\r\\n    }\\r\\n\\r\\n    event EtherReceived(uint256 amount);\\r\\n    event Buy(address buyer, uint256 amount);\\r\\n}\\r\\n\",\"keccak256\":\"0x11b4d6e7e04d7aa94f1172e1d3b72011c5e076d2e145302fc1c4cddc71415ea4\",\"license\":\"MIT\"},\"contracts/interfaces/IError.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IError {\\r\\n    error BelowMinimumBuy();\\r\\n    error RefundFailed(uint256 _refund);\\r\\n    error SalesHasEnded();\\r\\n    error InSufficientBalance();\\r\\n    error AboveMaximumBuy();\\r\\n    error TransferFailed();\\r\\n}\\r\\n\",\"keccak256\":\"0xc053241a16536dbce7fe5fda9d5d34f96a0eadd83d70ed585e377625479a86a0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162001227380380620012278339818101604052810190620000379190620001f7565b620000576200004b620000c160201b60201c565b620000c960201b60201c565b4260a0818152505062093a8060a05162000072919062000262565b6080818152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200029d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bf8262000192565b9050919050565b620001d181620001b2565b8114620001dd57600080fd5b50565b600081519050620001f181620001c6565b92915050565b60006020828403121562000210576200020f6200018d565b5b60006200022084828501620001e0565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200026f8262000229565b91506200027c8362000229565b925082820190508082111562000297576200029662000233565b5b92915050565b60805160a051610f5d620002ca60003960006107c00152600081816101eb01526104600152610f5d6000f3fe60806040526004361061007f5760003560e01c8063d96a094a1161004e578063d96a094a14610146578063eb91d37e14610162578063f2fde38b1461018d578063fc0c546a146101b6576100bd565b80633ccfd60b146100c2578063715018a6146100d95780638b7afe2e146100f05780638da5cb5b1461011b576100bd565b366100bd577f0a34e3d4f1e6b837dbce1011b61499fa1a483a0abee6a7a6697660b4b2d97132346040516100b39190610a55565b60405180910390a1005b600080fd5b3480156100ce57600080fd5b506100d76101e1565b005b3480156100e557600080fd5b506100ee610408565b005b3480156100fc57600080fd5b5061010561041c565b6040516101129190610a55565b60405180910390f35b34801561012757600080fd5b50610130610422565b60405161013d9190610ab1565b60405180910390f35b610160600480360381019061015b9190610afd565b61044b565b005b34801561016e57600080fd5b506101776107bb565b6040516101849190610a55565b60405180910390f35b34801561019957600080fd5b506101b460048036038101906101af9190610b56565b610849565b005b3480156101c257600080fd5b506101cb6108cc565b6040516101d89190610be2565b60405180910390f35b6101e96108f2565b7f000000000000000000000000000000000000000000000000000000000000000042101561021657600080fd5b6000600281905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102b89190610ab1565b602060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610c12565b6040518363ffffffff1660e01b8152600401610316929190610c3f565b6020604051808303816000875af1158015610335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103599190610ca0565b61036257600080fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161038890610cfe565b60006040518083038185875af1925050503d80600081146103c5576040519150601f19603f3d011682016040523d82523d6000602084013e6103ca565b606091505b5050905080610405576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6104106108f2565b61041a6000610970565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006104556107bb565b9050600060025490507f00000000000000000000000000000000000000000000000000000000000000004211156104b8576040517fde06ce3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6127108310156104f4576040517f61277c4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3482846105019190610d42565b1015610539576040517fc29e2ef800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b69010f0cf064dd5920000083111561057d576040517fbb7356e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003482019150678ac7230489e800006002541115610668576000678ac7230489e8000060025403905060003373ffffffffffffffffffffffffffffffffffffffff16826040516105cd90610cfe565b60006040518083038185875af1925050503d806000811461060a576040519150601f19603f3d011682016040523d82523d6000602084013e61060f565b606091505b505090508061065557816040517f2ca2371400000000000000000000000000000000000000000000000000000000815260040161064c9190610a55565b60405180910390fd5b848234030292508184039350505061066c565b8390505b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002819055507fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e33826040516106f1929190610c3f565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a76400008461074c9190610d42565b6040518363ffffffff1660e01b8152600401610769929190610c3f565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190610ca0565b6107b557600080fd5b50505050565b6000807f0000000000000000000000000000000000000000000000000000000000000000426107ea9190610d84565b9050600062015180826107fd9190610de7565b9050600060646601c6bf5263400060056108179190610d42565b836108229190610d42565b61082c9190610de7565b9050806601c6bf526340006108419190610d84565b935050505090565b6108516108f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790610e9b565b60405180910390fd5b6108c981610970565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108fa610a34565b73ffffffffffffffffffffffffffffffffffffffff16610918610422565b73ffffffffffffffffffffffffffffffffffffffff161461096e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096590610f07565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610a4f81610a3c565b82525050565b6000602082019050610a6a6000830184610a46565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9b82610a70565b9050919050565b610aab81610a90565b82525050565b6000602082019050610ac66000830184610aa2565b92915050565b600080fd5b610ada81610a3c565b8114610ae557600080fd5b50565b600081359050610af781610ad1565b92915050565b600060208284031215610b1357610b12610acc565b5b6000610b2184828501610ae8565b91505092915050565b610b3381610a90565b8114610b3e57600080fd5b50565b600081359050610b5081610b2a565b92915050565b600060208284031215610b6c57610b6b610acc565b5b6000610b7a84828501610b41565b91505092915050565b6000819050919050565b6000610ba8610ba3610b9e84610a70565b610b83565b610a70565b9050919050565b6000610bba82610b8d565b9050919050565b6000610bcc82610baf565b9050919050565b610bdc81610bc1565b82525050565b6000602082019050610bf76000830184610bd3565b92915050565b600081519050610c0c81610ad1565b92915050565b600060208284031215610c2857610c27610acc565b5b6000610c3684828501610bfd565b91505092915050565b6000604082019050610c546000830185610aa2565b610c616020830184610a46565b9392505050565b60008115159050919050565b610c7d81610c68565b8114610c8857600080fd5b50565b600081519050610c9a81610c74565b92915050565b600060208284031215610cb657610cb5610acc565b5b6000610cc484828501610c8b565b91505092915050565b600081905092915050565b50565b6000610ce8600083610ccd565b9150610cf382610cd8565b600082019050919050565b6000610d0982610cdb565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4d82610a3c565b9150610d5883610a3c565b9250828202610d6681610a3c565b91508282048414831517610d7d57610d7c610d13565b5b5092915050565b6000610d8f82610a3c565b9150610d9a83610a3c565b9250828203905081811115610db257610db1610d13565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df282610a3c565b9150610dfd83610a3c565b925082610e0d57610e0c610db8565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610e85602683610e18565b9150610e9082610e29565b604082019050919050565b60006020820190508181036000830152610eb481610e78565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610ef1602083610e18565b9150610efc82610ebb565b602082019050919050565b60006020820190508181036000830152610f2081610ee4565b905091905056fea264697066735822122012c489cd775795ddc0291d113995469d05d50d6c6b3f19ca1e30ba40dc8e618464736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063d96a094a1161004e578063d96a094a14610146578063eb91d37e14610162578063f2fde38b1461018d578063fc0c546a146101b6576100bd565b80633ccfd60b146100c2578063715018a6146100d95780638b7afe2e146100f05780638da5cb5b1461011b576100bd565b366100bd577f0a34e3d4f1e6b837dbce1011b61499fa1a483a0abee6a7a6697660b4b2d97132346040516100b39190610a55565b60405180910390a1005b600080fd5b3480156100ce57600080fd5b506100d76101e1565b005b3480156100e557600080fd5b506100ee610408565b005b3480156100fc57600080fd5b5061010561041c565b6040516101129190610a55565b60405180910390f35b34801561012757600080fd5b50610130610422565b60405161013d9190610ab1565b60405180910390f35b610160600480360381019061015b9190610afd565b61044b565b005b34801561016e57600080fd5b506101776107bb565b6040516101849190610a55565b60405180910390f35b34801561019957600080fd5b506101b460048036038101906101af9190610b56565b610849565b005b3480156101c257600080fd5b506101cb6108cc565b6040516101d89190610be2565b60405180910390f35b6101e96108f2565b7f000000000000000000000000000000000000000000000000000000000000000042101561021657600080fd5b6000600281905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102b89190610ab1565b602060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610c12565b6040518363ffffffff1660e01b8152600401610316929190610c3f565b6020604051808303816000875af1158015610335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103599190610ca0565b61036257600080fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161038890610cfe565b60006040518083038185875af1925050503d80600081146103c5576040519150601f19603f3d011682016040523d82523d6000602084013e6103ca565b606091505b5050905080610405576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6104106108f2565b61041a6000610970565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006104556107bb565b9050600060025490507f00000000000000000000000000000000000000000000000000000000000000004211156104b8576040517fde06ce3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6127108310156104f4576040517f61277c4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3482846105019190610d42565b1015610539576040517fc29e2ef800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b69010f0cf064dd5920000083111561057d576040517fbb7356e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003482019150678ac7230489e800006002541115610668576000678ac7230489e8000060025403905060003373ffffffffffffffffffffffffffffffffffffffff16826040516105cd90610cfe565b60006040518083038185875af1925050503d806000811461060a576040519150601f19603f3d011682016040523d82523d6000602084013e61060f565b606091505b505090508061065557816040517f2ca2371400000000000000000000000000000000000000000000000000000000815260040161064c9190610a55565b60405180910390fd5b848234030292508184039350505061066c565b8390505b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002819055507fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e33826040516106f1929190610c3f565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a76400008461074c9190610d42565b6040518363ffffffff1660e01b8152600401610769929190610c3f565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190610ca0565b6107b557600080fd5b50505050565b6000807f0000000000000000000000000000000000000000000000000000000000000000426107ea9190610d84565b9050600062015180826107fd9190610de7565b9050600060646601c6bf5263400060056108179190610d42565b836108229190610d42565b61082c9190610de7565b9050806601c6bf526340006108419190610d84565b935050505090565b6108516108f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790610e9b565b60405180910390fd5b6108c981610970565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108fa610a34565b73ffffffffffffffffffffffffffffffffffffffff16610918610422565b73ffffffffffffffffffffffffffffffffffffffff161461096e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096590610f07565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610a4f81610a3c565b82525050565b6000602082019050610a6a6000830184610a46565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9b82610a70565b9050919050565b610aab81610a90565b82525050565b6000602082019050610ac66000830184610aa2565b92915050565b600080fd5b610ada81610a3c565b8114610ae557600080fd5b50565b600081359050610af781610ad1565b92915050565b600060208284031215610b1357610b12610acc565b5b6000610b2184828501610ae8565b91505092915050565b610b3381610a90565b8114610b3e57600080fd5b50565b600081359050610b5081610b2a565b92915050565b600060208284031215610b6c57610b6b610acc565b5b6000610b7a84828501610b41565b91505092915050565b6000819050919050565b6000610ba8610ba3610b9e84610a70565b610b83565b610a70565b9050919050565b6000610bba82610b8d565b9050919050565b6000610bcc82610baf565b9050919050565b610bdc81610bc1565b82525050565b6000602082019050610bf76000830184610bd3565b92915050565b600081519050610c0c81610ad1565b92915050565b600060208284031215610c2857610c27610acc565b5b6000610c3684828501610bfd565b91505092915050565b6000604082019050610c546000830185610aa2565b610c616020830184610a46565b9392505050565b60008115159050919050565b610c7d81610c68565b8114610c8857600080fd5b50565b600081519050610c9a81610c74565b92915050565b600060208284031215610cb657610cb5610acc565b5b6000610cc484828501610c8b565b91505092915050565b600081905092915050565b50565b6000610ce8600083610ccd565b9150610cf382610cd8565b600082019050919050565b6000610d0982610cdb565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4d82610a3c565b9150610d5883610a3c565b9250828202610d6681610a3c565b91508282048414831517610d7d57610d7c610d13565b5b5092915050565b6000610d8f82610a3c565b9150610d9a83610a3c565b9250828203905081811115610db257610db1610d13565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df282610a3c565b9150610dfd83610a3c565b925082610e0d57610e0c610db8565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610e85602683610e18565b9150610e9082610e29565b604082019050919050565b60006020820190508181036000830152610eb481610e78565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610ef1602083610e18565b9150610efc82610ebb565b602082019050919050565b60006020820190508181036000830152610f2081610ee4565b905091905056fea264697066735822122012c489cd775795ddc0291d113995469d05d50d6c6b3f19ca1e30ba40dc8e618464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buy(uint256)": {
        "params": {
          "_quantity": "the amount of token the contract caller is buying"
        }
      },
      "getCurrentPrice()": {
        "details": "calculate the time difference from the time sale started to the time of query       decreaseSinceStart calculate the amount of token to be reduced per day       totalDecrement reduce the amount by 5% of the initial sales price",
        "returns": {
          "_0": "the current sale price at time of query"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "initial coin offering",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getCurrentPrice()": {
        "notice": "calculate the current price of each token"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/ICO.sol:ICO",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 840,
        "contract": "contracts/ICO.sol:ICO",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)777"
      },
      {
        "astId": 868,
        "contract": "contracts/ICO.sol:ICO",
        "label": "contractBalance",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 872,
        "contract": "contracts/ICO.sol:ICO",
        "label": "amountOfTokenPurchased",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)777": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}